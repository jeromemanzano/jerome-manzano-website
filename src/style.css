@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --delay: 100ms;
    --delay-offset: 100ms;
  }

  [type='text'],
  [type='email'],
  [type='url'],
  [type='password'],
  [type='number'],
  [type='date'],
  [type='datetime-local'],
  [type='month'],
  [type='search'],
  [type='tel'],
  [type='time'],
  [type='week'],
  [multiple],
  textarea,
  select {
    @apply h-full border-borderColor focus:border-activeBorderColor focus:ring-activeBorderColor bg-mainBgColor text-textColor;
  }

  [type='checkbox'],
  [type='radio'] {
    @apply border-borderColor text-activeBorderColor focus:ring-activeBorderColor;
  }

  .html,
  body {
    height: 100%;
    width: 100%;
  }

  section {
    padding: 5%;
    width: 100%;
  }

  section h2 {
    @apply text-mainColor 
    font-bold 
    text-3xl 
    md:text-4xl 
    lg:text-5xl 
    xl:text-6xl 
    mb-10 
    from:opacity-0 
    from:translate-x-5 
    duration-500 
    delay-200 
    text-center;
  }

  button.fill-hover {
    @apply px-6 py-2 border-[1px] border-borderColor;
  }

  button.fill-hover:hover {
    @apply text-contentTextColor;
  }

  button::before {
    z-index: -1;
  }

  .fill-hover:hover {
    @apply border-activeBorderColor;
  }

  .fill-hover::before {
    content: '';
    @apply text-contentTextColor;
  }

  .fill-hover:not(.active)::before {
    text-transform: uppercase;
    display: flex;

    justify-content: center;

    align-items: center;

    -webkit-transition-duration: 0.5s;
    -moz-transition-duration: 0.5s;
    -ms-transition-duration: 0.5s;
    transition-duration: 0.5s;

    -webkit-clip-path: polygon(0 100%, -50% 100%, 0% 0, 0 0);
    -moz-clip-path: polygon(0 100%, -50% 100%, 0% 0, 0 0);
    -ms-clip-path: polygon(0 100%, -50% 100%, 0% 0, 0 0);
    clip-path: polygon(0 100%, -50% 100%, 0% 0, 0 0);

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    @apply bg-activeBorderColor;
  }

  .fill-hover:hover::before {
    -webkit-clip-path: polygon(0 110%, 100% 100%, 150% 0, 0 0);
    -moz-clip-path: polygon(0 110%, 100% 100%, 150% 0, 0 0);
    -ms-clip-path: polygon(0 110%, 100% 100%, 150% 0, 0 0);
    clip-path: polygon(0 110%, 100% 100%, 150% 0, 0 0);
  }
}

@layer components {
  .staggered > *:nth-child(1) {
    animation-delay: var(--delay);
    transition-delay: var(--delay);
  }

  .staggered > *:nth-child(2) {
    animation-delay: calc(var(--delay) + (2 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (2 * var(--delay-offset)));
  }

  .staggered > *:nth-child(3) {
    animation-delay: calc(var(--delay) + (3 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (3 * var(--delay-offset)));
  }

  .staggered > *:nth-child(4) {
    animation-delay: calc(var(--delay) + (4 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (4 * var(--delay-offset)));
  }

  .staggered > *:nth-child(5) {
    animation-delay: calc(var(--delay) + (5 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (5 * var(--delay-offset)));
  }

  .staggered > *:nth-child(6) {
    animation-delay: calc(var(--delay) + (6 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (6 * var(--delay-offset)));
  }

  .staggered > *:nth-child(7) {
    animation-delay: calc(var(--delay) + (7 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (7 * var(--delay-offset)));
  }

  .staggered > *:nth-child(8) {
    animation-delay: calc(var(--delay) + (8 * var(--delay-offset)));
    transition-delay: calc(var(--delay) + (8 * var(--delay-offset)));
  }
}
